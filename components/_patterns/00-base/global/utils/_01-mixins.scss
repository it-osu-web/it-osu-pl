// Global Mixins
// In some cases, component-specific mixins may live within components.

// Mixin - Clearfix.
// Adds clearfix based on http://bourbon.io/docs/#clearfix
@mixin clearfix {
  &::after {
    clear: both;
    content: '';
    display: table;
  }
}

// Reset list item defaults when no margin, padding, list styles needed
@mixin list-reset {
  list-style: none;
  margin: 0;
  padding: 0;
}

// Hide only visually, but have it available for screenreaders.
@mixin visually-hidden($focusable: false) {
  border: 0 !important;
  clip: rect(0 0 0 0) !important;
  height: 1px !important;
  margin: -1px !important;
  overflow: hidden !important;
  padding: 0 !important;
  position: absolute !important;
  width: 1px !important;
  // Extends the `visually-hidden` class to allow the element to be focusable
  // when navigated to via the keyboard.
  @if $focusable == true {
    &:active,
    &:focus {
      clip: auto !important;
      height: auto !important;
      margin: 0 !important;
      overflow: visible !important;
      position: static !important;
      width: auto !important;
    }
  }
}

// Use the breakout mixin to extend a background color or image edge-to-edge.
// Even when a parent container has the 'grid-container' class.
@mixin breakout() {
  margin-left: calc(-50vw + 50%);
  margin-right: calc(-50vw + 50%);
}

// Use when internal elements of a breakout should respect the grid-container alignment.
@mixin breakout-inner() {
  @extend .grid-container;
}

// Aspect ratio mixin for images.
@mixin ratio($x, $y) {
  display: block;
  position: relative;
  height: 0;
  overflow: hidden;
  padding-bottom: #{$y / $x * 100 + '%'};

  img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
  }
}
